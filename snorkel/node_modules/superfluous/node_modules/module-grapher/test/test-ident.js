var assert = require('./custom-asserts');

var identifier = require('../lib/ident');

suite('Ident', function() {
  test("Identifier#isValid returns true for valid identifiers", function() {
    assert.isTrue(identifier.isValid('foo'));
    assert.isTrue(identifier.isValid('./foo'));
    assert.isTrue(identifier.isValid('../foo'));
    assert.isTrue(identifier.isValid('./foo/../B-A-R/../1_2_3'));
  });
  
  test("Identifier#isValid returns false for invalid identifiers", function() {
    assert.isFalse(identifier.isValid('.../foo'));
    assert.isFalse(identifier.isValid('foo.js'));
    assert.isFalse(identifier.isValid('f@@'));
  });

  test("Identifier#isRelative returns true for relative identifiers", function() {
    assert.isTrue(identifier.isRelative('../foo'));
    assert.isTrue(identifier.isRelative('./foo'));
    assert.isTrue(identifier.isRelative('../../foo'));
  });

  test("Identifier#isRelative returns false for top-level identifiers", function() {
    assert.isFalse(identifier.isRelative('foo'));
    assert.isFalse(identifier.isRelative('foo/bar/baz'));
    assert.isFalse(identifier.isRelative('foo/../../foo'));
  });

  test("Identifier#isTopLevel returns true for top-level identifiers", function() {
    assert.isTrue(identifier.isTopLevel('foo'));
  });

  test("Identifier#isTopLevel returns false for relative identifiers", function() {
    assert.isFalse(identifier.isTopLevel('./foo'));
  });
});

